html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
library(readxl)
library(tableHTML)
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = data_frames_list[[i]]
df_i[df_i == "x"] <- '<i class="far fa-check-circle fa-2x"
style="color: rgb(0, 147, 15)"></i>'
df_i[is.na(df_i)] <- '<i class="far fa-question-circle fa-2x"
style="color: rgb(222, 159, 1)"></i>'
assign(all_sheets[i], df_i)
}
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
html_tbl = df_i %>%
tableHTML(class='table-fill', escape = FALSE,
rownames = FALSE)
writeLines(as.character(html_tbl), paste0(all_sheets[i], ".html"))
}
# Write the HTML table to a file
# res = df_i %>%
#   # addHtmlTableStyle(css.cell = "padding-left: 2.5rem; color: red; padding-right: .2rem;",
#   #                   align="r") %>%
#   htmlTable(escape=FALSE)
124+	115	+54	+123+	121+	105
.es_from_user_crude <- function(measure, user_es_measure_crude, user_es_crude, user_se_crude,
user_ci_lo_crude, user_ci_up_crude) {
if (missing(user_es_crude)) user_es_crude <- rep(NA_real_, length(user_es_measure_crude))
if (missing(user_se_crude)) user_se_crude <- rep(NA_real_, length(user_es_measure_crude))
if (missing(user_ci_lo_crude)) user_ci_lo_crude <- rep(NA_real_, length(user_es_measure_crude))
if (missing(user_ci_up_crude)) user_ci_up_crude <- rep(NA_real_, length(user_es_measure_crude))
es <- ifelse(is.na(user_es_crude) & !is.na(user_es_measure_crude) & !is.na(user_ci_lo_crude) & !is.na(user_ci_up_crude),
(user_ci_up_crude + user_ci_lo_crude) / 2,
user_es_crude
)
se <- ifelse(is.na(user_se_crude) & !is.na(user_es_measure_crude) & !is.na(user_ci_lo_crude) & !is.na(user_ci_up_crude),
(user_ci_up_crude - user_ci_lo_crude) / (2 * qnorm(.975)),
user_se_crude
)
ci_lo <- ifelse(is.na(user_ci_lo_crude) & !is.na(user_es_measure_crude) & !is.na(user_es_crude) & !is.na(user_se_crude),
user_es_crude - user_se_crude * qnorm(.975),
user_ci_lo_crude
)
ci_up <- ifelse(is.na(user_ci_up_crude) & !is.na(user_es_measure_crude) & !is.na(user_es_crude) & !is.na(user_se_crude),
user_es_crude + user_se_crude * qnorm(.975),
user_ci_up_crude
)
res <- data.frame(info_used = rep(NA, length(user_es_measure_crude)))
res$info_used <- "user_input_crude"
res[, paste(unique(measure))] <- es
res[, paste(unique(measure), "_se", sep = "")] <- se
res[, paste(unique(measure), "_ci_lo", sep = "")] <- ci_lo
res[, paste(unique(measure), "_ci_up", sep = "")] <- ci_up
attr(res, "measure") <- user_es_measure_crude
return(res)
}
.es_from_user_crude("SMD, "MR", 0.5, 0.1)
.es_from_user_crude("SMD", "MR", 0.5, 0.1)
es_from_beta_std(beta_std = 0.423, sd_dv = 0.98, n_exp = 18, n_nexp = 16)
#'
#' @references
#' Lipsey, M. W., & Wilson, D. B. (2001). Practical meta-analysis. Sage Publications, Inc.
#'
#' @export es_from_beta_std
#'
#' @md
#'
#' @examples
#' es_from_beta_std(beta_std = 2.1, sd_dv = 0.98, n_exp = 20, n_nexp = 22)
es_from_beta_std <- function(beta_std, sd_dv, n_exp, n_nexp,
smd_to_cor = "viechtbauer", reverse_beta_std) {
if (missing(reverse_beta_std)) reverse_beta_std <- rep(FALSE, length(beta_std))
reverse_beta_std[is.na(reverse_beta_std)] <- FALSE
beta_std <- ifelse(reverse_beta_std, -beta_std, beta_std)
sd_dummy <- sqrt((n_exp - (n_exp^2 / (n_exp + n_nexp))) / (n_exp + n_nexp - 1))
unstd_beta <- beta_std * (sd_dv / sd_dummy)
es <- es_from_beta_unstd(
beta_unstd = unstd_beta, sd_dv = sd_dv,
n_exp = n_exp, n_nexp = n_nexp, smd_to_cor = smd_to_cor
)
es$info_used <- "beta_std"
return(es)
}
es_from_beta_std(beta_std = 0.423, sd_dv = 0.98, n_exp = 18, n_nexp = 16)
#'
#' @references
#' Lipsey, M. W., & Wilson, D. B. (2001). Practical meta-analysis. Sage Publications, Inc.
#'
#' @export es_from_beta_std
#'
#' @md
#'
#' @examples
#' es_from_beta_std(beta_std = 2.1, sd_dv = 0.98, n_exp = 20, n_nexp = 22)
es_from_beta_std <- function(beta_std, sd_dv, n_exp, n_nexp,
smd_to_cor = "viechtbauer", reverse_beta_std) {
if (missing(reverse_beta_std)) reverse_beta_std <- rep(FALSE, length(beta_std))
reverse_beta_std[is.na(reverse_beta_std)] <- FALSE
beta_std <- ifelse(reverse_beta_std, -beta_std, beta_std)
sd_dummy <- sqrt((n_exp - (n_exp^2 / (n_exp + n_nexp))) / (n_exp + n_nexp - 1))
unstd_beta <- beta_std * (sd_dv / sd_dummy)
es <- es_from_beta_unstd(
beta_unstd = unstd_beta, sd_dv = sd_dv,
n_exp = n_exp, n_nexp = n_nexp, smd_to_cor = smd_to_cor
)
es$info_used <- "beta_std"
return(es)
}
#'
#' @references
#' Lipsey, M. W., & Wilson, D. B. (2001). Practical meta-analysis. Sage Publications, Inc.
#'
#' @export es_from_beta_unstd
#'
#' @md
#'
#' @examples
#' es_from_beta_unstd(beta_unstd = 2.1, sd_dv = 0.98, n_exp = 20, n_nexp = 22)
es_from_beta_unstd <- function(beta_unstd, sd_dv, n_exp, n_nexp,
smd_to_cor = "viechtbauer", reverse_beta_unstd) {
if (missing(reverse_beta_unstd)) reverse_beta_unstd <- rep(FALSE, length(beta_unstd))
reverse_beta_unstd[is.na(reverse_beta_unstd)] <- FALSE
sd_pooled <- suppressWarnings(
sqrt(abs(((sd_dv^2 * (n_exp + n_nexp - 1)) - (beta_unstd^2 * ((n_exp * n_nexp) / (n_exp + n_nexp)))) /
(n_exp + n_nexp - 2)))
)
d <- beta_unstd / sd_pooled
es <- .es_from_d(
d = d, n_exp = n_exp, n_nexp = n_nexp,
smd_to_cor = smd_to_cor, reverse = reverse_beta_unstd
)
es$info_used <- "beta_unstd"
return(es)
}
es_from_beta_std(beta_std = 0.423, sd_dv = 0.98, n_exp = 18, n_nexp = 16)
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
i=1
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
data_frames_list
i
data_frames_list
data_frames_list[[1]]
names(data_frames_list)
names(data_frames_list[[1]])
file_path <- "list_tables.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
i=1
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
seq_along(all_sheets)
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
df_i = mget(all_sheets[[i]])[[1]]
rio::export(df_i, paste0(all_sheets[i], ".xlsx"))
rio::export(df_i, paste0(all_sheets[i], ".txt"))
}
all_sheets
all_sheets[[i]]
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
df_i
rio::export(df_i, paste0(all_sheets[i], ".xlsx"))
rio::export(df_i, paste0(all_sheets[i], ".txt"))
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
rio::export(df_i, paste0(all_sheets[i], ".xlsx"))
rio::export(df_i, paste0(all_sheets[i], ".txt"))
}
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
rio::export(df_i, paste0(all_sheets[i], ".xlsx", overwrite=TRUE))
rio::export(df_i, paste0(all_sheets[i], ".txt"))
}
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
print(i)
df_i = NULL
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
rio::export(df_i, paste0(all_sheets[i], ".xlsx", overwrite=TRUE))
rio::export(df_i, paste0(all_sheets[i], ".txt"))
}
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
print(i)
rio::export(df_i, paste0(all_sheets[i], ".xlsx", overwrite=TRUE))
print(i)
rio::export(df_i, paste0(all_sheets[i], ".txt"))
print(i)
}
library(readxl)
file_path <- "list_datasets.xlsx"
# Read all sheets into a list of data frames
all_sheets <- readxl::excel_sheets(file_path)
data_frames_list <- lapply(all_sheets, function(sheet_name) {
read_excel(file_path, sheet = sheet_name)
})
for (i in seq_along(all_sheets)) {
df_i = NULL
# df_i = mget(all_sheets[[i]])[[1]]
df_i = data_frames_list[[i]]
rio::export(df_i, paste0(all_sheets[i], ".xlsx"), overwrite=TRUE)
rio::export(df_i, paste0(all_sheets[i], ".txt"))
}
convert_df(readxl::read_excel("C:/Users/Corentin Gosling/drive_gmail/Recherche/es.utils/web/tables/anova.xlsx"))
library(devtools)
load_all()
convert_df(readxl::read_excel("C:/Users/Corentin Gosling/drive_gmail/Recherche/es.utils/web/tables/anova.xlsx"))
A = convert_df(readxl::read_excel("C:/Users/Corentin Gosling/drive_gmail/Recherche/es.utils/web/tables/anova.xlsx"))
class(A)
isTRUE(is.null(A))
is.null(A)
is.missing(A)
missing(A)
exists(A)
exists("A")
load_all()
A = convert_df(readxl::read_excel("C:/Users/Corentin Gosling/drive_gmail/Recherche/es.utils/web/tables/anova.xlsx"))
isTRUE("TRUE")
TRUE=="TRUE"
TRUE=="FALSE"
"TRUE" == TRUE
11.1 + 10.8 + 33 + 33 + 14.6 + 17.1
9.2 + 10.8 + 33 + 30.5 + 14.6 + 17.1
9.2 + 10.8 + 33 + 29 + 14.6 + 17.1
9.2 + 10.8 + 30 + 29 + 14.6 + 17.1
